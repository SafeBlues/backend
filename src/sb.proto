syntax = "proto3";

package safeblues;

option java_package = "org.safeblues.api";
option java_outer_classname = "SafeBluesProtos";

import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";


service SafeBluesAdmin {
    rpc NewStrand(Strand) returns (Strand) {
        option (google.api.http) = {
            post: "/admin/new"
            body: "*"
        };
    }

    rpc ListStrands(Empty) returns (StrandUpdate) {
        option (google.api.http) = {
            get: "/admin/list"
        };
    }
}

service SafeBlues {
    rpc PingServer(Ping) returns (Ping) {
        option (google.api.http) = {
            get: "/ping/{nonce}"
        };
    }
    rpc Report(InfectionReport) returns (Empty);
    rpc Pull(Empty) returns (StrandUpdate);
}

service SafeBluesStats {
    rpc AllStats(Empty) returns (AllStatsRes) {
        option (google.api.http) = {
            get: "/stats"
        };
    }

    rpc Stats(StatsReq) returns (StatsRes) {
        option (google.api.http) = {
            get: "/stats/{strand_id}"
        };
    }
}

message Empty {}

message StatsReq {
    uint32 strand_id = 1;
}

message StatsRes {
    uint32 strand_id = 1;

    repeated google.protobuf.Timestamp times = 2;
    repeated uint32 total_incubating_strands = 3;
    repeated uint32 total_infected_strands = 4;
    repeated uint32 total_removed_strands = 5;
}

message AllStatsRes {
    repeated StatsRes stats = 1;
}

message Ping {
    uint32 nonce = 1;
}

message Strand {
    uint32 strand_id = 1;
    google.protobuf.Timestamp start_time = 2;
    google.protobuf.Timestamp end_time = 3;
    double seeding_probability = 4;
    double infection_probability = 5;
    double incubation_period_days = 6;
    double infectious_period_days = 7;
}

message InfectionReport {
    string client_id = 1;

    repeated uint32 current_incubating_strands = 2;
    repeated uint32 current_infected_strands = 3;
    repeated uint32 current_removed_strands = 4;
}

message StrandUpdate {
    repeated Strand strands = 1;
}
